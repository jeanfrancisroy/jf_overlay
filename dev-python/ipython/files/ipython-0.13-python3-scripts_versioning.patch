--- IPython/frontend/terminal/console/tests/test_console.py
+++ IPython/frontend/terminal/console/tests/test_console.py
@@ -35,7 +35,7 @@
     ipython_cmd = None
     for i in range(5):
         try:
-            ipython_cmd = find_cmd('ipython3' if py3compat.PY3 else 'ipython')
+            ipython_cmd = find_cmd('ipython')
         except IOError:
             time.sleep(0.1)
         else:
--- IPython/lib/irunner.py
+++ IPython/lib/irunner.py
@@ -288,7 +288,7 @@
 
         self.run_file(args[0],opts.interact)
 
-_ipython_cmd = "ipython3" if py3compat.PY3 else "ipython"
+_ipython_cmd = "ipython"
 
 # Specific runners for particular programs
 class IPythonRunner(InteractiveRunner):
--- IPython/testing/tools.py
+++ IPython/testing/tools.py
@@ -207,7 +207,7 @@
     _ip = get_ipython()
     test_dir = os.path.dirname(__file__)
 
-    ipython_cmd = find_cmd('ipython3' if py3compat.PY3 else 'ipython')
+    ipython_cmd = find_cmd('ipython')
     # Absolute path for filename
     full_fname = os.path.join(test_dir, fname)
     full_cmd = '%s %s %s' % (ipython_cmd, cmdargs, full_fname)
--- setup.py
+++ setup.py
@@ -236,7 +236,7 @@
         setuptools_extra_args['use_2to3'] = True
         from setuptools.command.build_py import build_py
         setup_args['cmdclass'] = {'build_py': record_commit_info('IPython', build_cmd=build_py)}
-        setuptools_extra_args['entry_points'] = find_scripts(True, suffix='3')
+        setuptools_extra_args['entry_points'] = find_scripts(True)
         setuptools._dont_write_bytecode = True
 else:
     # If we are running without setuptools, call this function which will
