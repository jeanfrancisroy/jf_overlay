diff --git a/xf86-video-msm-9999-orig/src/msm-dri.c b/xf86-video-msm-9999/src/msm-dri.c
index a74368b..36d1bbe 100644
--- a/xf86-video-msm-9999-orig/src/msm-dri.c
+++ b/xf86-video-msm-9999/src/msm-dri.c
@@ -97,7 +97,7 @@ MSMDRICloseScreen(ScreenPtr pScreen)
 	 pMsm->dri->pDRIInfo->devPrivate;
 
    if (pMSMDRI)
-      xfree(pMSMDRI);
+      free(pMSMDRI);
 
    DRICloseScreen(pScreen);
    DRIDestroyInfoRec(pMsm->dri->pDRIInfo);
@@ -144,7 +144,7 @@ MSMDRIScreenInit(ScreenPtr pScreen)
 
    pDRIInfo->drmDriverName = "msm_kgsl";
    pDRIInfo->clientDriverName = "yamato";
-   pDRIInfo->busIdString = xalloc(16);
+   pDRIInfo->busIdString = malloc(16);
    strcpy(pDRIInfo->busIdString, "platform:kgsl");
 
    pDRIInfo->ddxDriverMajorVersion = 1;
@@ -166,7 +166,7 @@ MSMDRIScreenInit(ScreenPtr pScreen)
 
    pDRIInfo->SAREASize = SAREA_MAX;
 
-   pMSMDRI = (MSMDRIPrivPtr) xcalloc(1, sizeof(*pMSMDRI));
+   pMSMDRI = (MSMDRIPrivPtr) calloc(1, sizeof(*pMSMDRI));
 
    if (pMSMDRI == NULL) {
       DRIDestroyInfoRec(pMsm->dri->pDRIInfo);
@@ -195,7 +195,7 @@ MSMDRIScreenInit(ScreenPtr pScreen)
    if (!DRIScreenInit(pScreen, pDRIInfo, &pMsm->dri->drmFD)) {
       xf86DrvMsg(pScreen->myNum, X_ERROR,
 		 "MSM-DRI DRIScreenInit failed.  Disabling DRI.\n");
-      xfree(pDRIInfo->devPrivate);
+      free(pDRIInfo->devPrivate);
       pDRIInfo->devPrivate = NULL;
       DRIDestroyInfoRec(pDRIInfo);
       pDRIInfo = NULL;
diff --git a/xf86-video-msm-9999-orig/src/msm-dri2.c b/xf86-video-msm-9999/src/msm-dri2.c
index 60a9fa8..61192b6 100644
--- a/xf86-video-msm-9999-orig/src/msm-dri2.c
+++ b/xf86-video-msm-9999/src/msm-dri2.c
@@ -64,14 +64,14 @@ static DRI2BufferPtr MSMDRI2CreateBuffers(DrawablePtr drawable,
     PixmapPtr pixmap;
     int i;
 
-    buffers = xcalloc(count, sizeof(*buffers));
+    buffers = calloc(count, sizeof(*buffers));
     if (buffers == NULL)
 	return NULL;
 
-    privates = xcalloc(count, sizeof(struct msm_dri2_priv));
+    privates = calloc(count, sizeof(struct msm_dri2_priv));
 
     if (privates == NULL) {
-	xfree(buffers);
+	free(buffers);
 	return NULL;
     }
 
@@ -129,14 +129,14 @@ MSMDRI2CreateBuffer(DrawablePtr drawable, unsigned int attachment,
     struct msm_pixmap_priv *pixpriv;
     PixmapPtr pixmap;
 
-    buffer = xcalloc(1, sizeof(*buffer));
+    buffer = calloc(1, sizeof(*buffer));
     if (buffer == NULL)
 	return NULL;
 
-    private = xcalloc(1, sizeof(struct msm_dri2_priv));
+    private = calloc(1, sizeof(struct msm_dri2_priv));
 
     if (private == NULL) {
-	xfree(buffer);
+	free(buffer);
 	return NULL;
     }
 
@@ -205,8 +205,8 @@ MSMDRI2DestroyBuffers(DrawablePtr drawable,
 	(*pScreen->DestroyPixmap)(priv->pixmap);
     }
 
-    xfree(buffers[0].driverPrivate);
-    xfree(buffers);
+    free(buffers[0].driverPrivate);
+    free(buffers);
 }
 #else
 static void
@@ -221,8 +221,8 @@ MSMDRI2DestroyBuffer(DrawablePtr drawable, DRI2Buffer2Ptr buffers)
     priv = buffers->driverPrivate;
     (*pScreen->DestroyPixmap)(priv->pixmap);
 
-    xfree(buffers->driverPrivate);
-    xfree(buffers);
+    free(buffers->driverPrivate);
+    free(buffers);
 }
 #endif
 
diff --git a/xf86-video-msm-9999-orig/src/msm-driver.c b/xf86-video-msm-9999/src/msm-driver.c
index 15378f8..43fe5b5 100755
--- a/xf86-video-msm-9999-orig/src/msm-driver.c
+++ b/xf86-video-msm-9999/src/msm-driver.c
@@ -387,7 +387,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
    if (pMsm->fd < 0) {
       xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
 		 "Opening '%s' failed: %s\n", dev, strerror(errno));
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -403,7 +403,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
       xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
 		 "Unable to read hardware info from %s: %s\n",
 		 dev, strerror(errno));
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -414,7 +414,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
 
       xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
 		 "Unable to determine the MDP and panel type\n");
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -443,7 +443,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
 		 "Unable to read the current mode from %s: %s\n",
 		 dev, strerror(errno));
 
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -454,7 +454,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
        && pMsm->mode_info.bits_per_pixel != 24) {
       xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
 		 "The driver can only support 16bpp and 24bpp output\n");
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -476,7 +476,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
 	default:
 		xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
 			"The driver can only support 16bpp and 24bpp output\n");
-		xfree(pMsm);
+		free(pMsm);
 		return FALSE;
    }
 
@@ -484,7 +484,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
 			Support24bppFb | Support32bppFb |
 			SupportConvert32to24 | SupportConvert24to32)) {
       ErrorF("Unable to set bitdepth\n");
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -492,13 +492,13 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
    pScrn->rgbBits = 8;
 
    if (!xf86SetWeight(pScrn, defaultWeight, defaultWeight)) {
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
    /* Initialize default visual */
    if (!xf86SetDefaultVisual(pScrn, -1)) {
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -506,7 +506,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
       Gamma zeros = { 0.0, 0.0, 0.0 };
 
       if (!xf86SetGamma(pScrn, zeros)) {
-         xfree(pMsm);
+         free(pMsm);
 	 return FALSE;
       }
    }
@@ -526,10 +526,10 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
    /* We need to allocate this memory here because we have multiple
     * screens, and we can't go writing on the MSMOptions structure */
 
-   options = xalloc(sizeof(MSMOptions));
+   options = malloc(sizeof(MSMOptions));
 
    if (options == NULL) {
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -640,7 +640,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
     * I don't see any reason to do that unless we have other functions
     * that need it */
 
-   xfree(options);
+   free(options);
 
 #if USEDRI2
    if (pMsm->useDRI2 && !MSMInitDRM(pScrn)) {
@@ -722,7 +722,7 @@ MSMPreInit(ScrnInfoPtr pScrn, int flags)
    MSMOutputSetup(pScrn);
 
    if (!xf86InitialConfiguration(pScrn, FALSE)) {
-      xfree(pMsm);
+      free(pMsm);
       return FALSE;
    }
 
@@ -800,7 +800,7 @@ MSMCloseScreen(int scrnIndex, ScreenPtr pScreen)
    /* Close EXA */
    if (pMsm->accel && pMsm->pExa) {
       exaDriverFini(pScreen);
-      xfree(pMsm->pExa);
+      free(pMsm->pExa);
       pMsm->pExa = NULL;
    }
 
@@ -902,7 +902,7 @@ MSMScreenInit(int scrnIndex, ScreenPtr pScreen, int argc, char **argv)
 #if USEDRI
    pMsm->DRIEnabled = FALSE;
    if (!pMsm->useDRI2 && pMsm->useDRI) {
-     pMsm->dri = xcalloc(1, sizeof(struct msm_dri));
+     pMsm->dri = calloc(1, sizeof(struct msm_dri));
      pMsm->dri->depthBits = pScrn->depth;
      pMsm->DRIEnabled = MSMDRIScreenInit(pScreen);
    }
@@ -1139,7 +1139,7 @@ MSMProbe(DriverPtr drv, int flags)
       }
    }
 
-   xfree(sections);
+   free(sections);
    return foundScreen;
 }
 
diff --git a/xf86-video-msm-9999-orig/src/msm-drm.c b/xf86-video-msm-9999/src/msm-drm.c
index 9b75f14..cb195ec 100644
--- a/xf86-video-msm-9999-orig/src/msm-drm.c
+++ b/xf86-video-msm-9999/src/msm-drm.c
@@ -156,7 +156,7 @@ msm_drm_bo_create(int fd, int size)
     if (ret)
 	return NULL;
 
-    bo = xcalloc(1, sizeof(struct msm_drm_bo));
+    bo = calloc(1, sizeof(struct msm_drm_bo));
 
     if (bo == NULL)
 	return NULL;
@@ -310,7 +310,6 @@ void
 msm_drm_bo_free(struct msm_drm_bo *bo)
 {
     struct drm_gem_close close;
-    int ret;
 
     if (bo == NULL || bo->handle == 0)
 	return;
@@ -320,8 +319,8 @@ msm_drm_bo_free(struct msm_drm_bo *bo)
 
     memset(&close, 0, sizeof(close));
     close.handle = bo->handle;
-    ret = ioctl(bo->fd, DRM_IOCTL_GEM_CLOSE, &close);
+    ioctl(bo->fd, DRM_IOCTL_GEM_CLOSE, &close);
 
-    xfree(bo);
+    free(bo);
 }
 
diff --git a/xf86-video-msm-9999-orig/src/msm-exa.c b/xf86-video-msm-9999/src/msm-exa.c
index ce16a93..0126acc 100755
--- a/xf86-video-msm-9999-orig/src/msm-exa.c
+++ b/xf86-video-msm-9999/src/msm-exa.c
@@ -679,7 +679,7 @@ MSMCreatePixmap(ScreenPtr pScreen, int size, int align)
     ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
     MSMPtr pMsm = MSMPTR(pScrn);
 
-    priv = xcalloc(1, sizeof(struct msm_pixmap_priv));
+    priv = calloc(1, sizeof(struct msm_pixmap_priv));
     if (priv == NULL)
 	return NULL;
 
@@ -692,7 +692,7 @@ MSMCreatePixmap(ScreenPtr pScreen, int size, int align)
     if (priv->bo)
 	return priv;
 
-    xfree(priv);
+    free(priv);
     return NULL;
 }
 
@@ -707,7 +707,7 @@ MSMDestroyPixmap(ScreenPtr pScreen, void *dpriv)
     if (priv->bo)
 	msm_drm_bo_free(priv->bo);
 
-    xfree(dpriv);
+    free(dpriv);
 }
 
 Bool
diff --git a/xf86-video-msm-9999-orig/src/msm-pixmap.c b/xf86-video-msm-9999/src/msm-pixmap.c
index 13ee83c..3b802c6 100644
--- a/xf86-video-msm-9999-orig/src/msm-pixmap.c
+++ b/xf86-video-msm-9999/src/msm-pixmap.c
@@ -107,7 +107,7 @@ msm_alloc_offscreen_memory(ScreenPtr pScreen, int size)
     ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
     MSMPtr pMsm = MSMPTR(pScrn);
     struct msm_offscreen_area *ret =
-	xcalloc(1, sizeof(struct msm_offscreen_area));
+	calloc(1, sizeof(struct msm_offscreen_area));
 
     if (ret == NULL)
 	return NULL;
@@ -148,7 +148,7 @@ msm_alloc_offscreen_memory(ScreenPtr pScreen, int size)
     }
 
 err:
-    xfree(ret);
+    free(ret);
     return NULL;
 }
 
@@ -163,7 +163,7 @@ msm_free_offscreen_memory(ScreenPtr pScreen, struct msm_offscreen_area *area)
     else if (area->type == MSM_OFFSCREEN_EXA)
 	exaOffscreenFree(pScreen, (ExaOffscreenArea *) area->priv);
 
-    xfree(area);
+    free(area);
 }
 
 
diff --git a/xf86-video-msm-9999-orig/src/msm-video.c b/xf86-video-msm-9999/src/msm-video.c
index 4f69ecb..740899a 100755
--- a/xf86-video-msm-9999-orig/src/msm-video.c
+++ b/xf86-video-msm-9999/src/msm-video.c
@@ -704,7 +704,7 @@ MSMInitAdaptor(ScreenPtr pScreen)
 
    int i;
 
-   adapt = xcalloc(1, sizeof(XF86VideoAdaptorRec) +
+   adapt = calloc(1, sizeof(XF86VideoAdaptorRec) +
 		   (sizeof(DevUnion) * pMsm->xvports) +
 		   (sizeof(MSMPortPrivRec) * pMsm->xvports));
 
@@ -771,7 +771,7 @@ MSMInitVideo(ScreenPtr pScreen)
 
    count = xf86XVListGenericAdaptors(pScrn, &list);
 
-   newlist = xalloc((count + 1) * sizeof(XF86VideoAdaptorPtr *));
+   newlist = malloc((count + 1) * sizeof(XF86VideoAdaptorPtr *));
    if (newlist == NULL)
       return;
 
@@ -782,5 +782,5 @@ MSMInitVideo(ScreenPtr pScreen)
 
    xf86XVScreenInit(pScreen, newlist, count);
 
-   xfree(newlist);
+   free(newlist);
 }
